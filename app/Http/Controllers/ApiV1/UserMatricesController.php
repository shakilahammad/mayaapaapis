<?php

namespace App\Http\Controllers\ApiV1;

use App\Classes\PushNotificationToUserApp;
use Carbon\Carbon;
use App\Models\User;
use App\Models\Question;
use App\Models\AppVersion;
use Illuminate\Http\Request;
use App\Models\TrackDownload;
use App\Models\ScratchApplied;
use Illuminate\Support\Facades\DB;
use App\Models\AppSubscriptionPlans;
use App\Http\Controllers\Controller;
use Maatwebsite\Excel\Facades\Excel;

class UserMatricesController extends Controller
{
    public function getMatrices($id)
    {
        $user = User::find($id);
        if (count($user) > 0) {
//            $total_question = Question::whereUserId($id)->count();
//            $total_pending = Question::whereUserId($id)->where('status', '!=', 'answered')->count();

            $totalQuestion = DB::select("select count(*) as total from questions where user_id = {$user->id}");
            $totalPending = DB::select("select count(*) as total from questions where user_id = {$user->id} and status = 'pending' ");

            $result = DB::select(DB::raw("select avg(timestampdiff(SECOND, qs.created_at, rt.end)) as response from response_time as rt, questions as qs where qs.id = rt.`question_id` and qs.`is_premium` =1 and qs.status='answered' and qs.created_at >= NOW() - INTERVAL 7 DAY"));
            $result1 = DB::select(DB::raw("select avg(timestampdiff(SECOND, qs.created_at, rt.end)) as response from response_time as rt, questions as qs where qs.id = rt.`question_id` and qs.`is_premium` =0 and qs.status='answered' and qs.created_at >= NOW() - INTERVAL 7 DAY"));

            return response()->json([
                'status' => 'success',
                'data' => [[
                    'total' => $totalQuestion[0]->total,
                    'pending' => $totalPending[0]->total,
                    'prem_response' => round($result[0]->response / 60, 2),
                    'non_prem_response' => round($result1[0]->response / 60, 2)
                ]],
                'error_code' => 0,
                'error_message' => '',
            ]);
        }

        return response()->json([
            'status' => 'failure',
            'data' => [],
            'error_code' => 0,
            'error_message' => '',
        ]);
    }

    public function getLastQuestionStatus($user_id)
    {
        $user = User::find($user_id);
        $totalQuestion = 0;
        $totalPending = 0;
        if (count($user) > 0) {
            $user->update([
                'session' => 1
            ]);
//            $total_question = Question::whereUserId($user_id)->count();
//            $total_pending = Question::whereUserId($user_id)->where('status', '!=', 'answered')->count();

            $totalQuestion = DB::select("select count(*) as total from questions where user_id = {$user->id}");
            $totalPending = DB::select("select count(*) as total from questions where user_id = {$user->id} and status = 'pending' ");

            $last_question = Question::whereUserId($user_id)->orderBy('created_at', 'dessc')->first();
            if (count($last_question) > 0) {
                if ($last_question->status != "answered") {
                    if ($last_question->specialist_id != 0) {
                        $type = "referred";
                    } else {
                        $type = $last_question->status;
                    }
                    $lock_queue = DB::table('locked_queue')->where('question_id', $last_question->id)->get();
                    if (count($lock_queue) > 0) {
                        $type = "locked";
                    }
                } else {
                    $type = $last_question->status;
                }
                $status = "success";
            } else {
                $status = "failure";
                $type = "not found";
            }
        } else {
            $status = "failure";
            $type = "not found";
        }
        $data = [
            'status' => $status,
            'data' => [
                'total' => $totalQuestion[0]->total,
                'pending' => $totalPending[0]->total,
                'type' => $type
            ],
            'error_code' => 0,
            'error_message' => '',
        ];

        return response()->json($data);
    }

    public function formattedHistory($history, $is_active)
    {
        $planName = AppSubscriptionPlans::whereId($history->app_subscription_plans_id)->first();
        $results = [
            'id' => $history->id,
            'user_id' => $history->users_id,
            'plan' => $planName->plan_name,
            'is_active' => $is_active,
            'expiry_time' => Carbon::parse($history->updated_at)->format('d M Y  D g:i A'),
            'effective_time' => Carbon::parse($history->created_at)->format('d M Y  D g:i A'),
        ];
        return $results;
    }

    public function feedback(Request $request)
    {
        if (isset($request->feedback)) {
            $var1 = strip_tags($request->feedback);
            $var2 = html_entity_decode(preg_replace("/U\+([0-9A-F]{4})/", "&#x\\1;", $var1), ENT_NOQUOTES, 'UTF-8');

            \Mail::raw($var2, function ($message) {
                $message->from('internal@maya.com.bd', 'User Feedback');
                $message->to('campaign@maya.com.bd', 'Feedback')->subject('New Feedback from App User!');
            });
        }
    }

    public function getLatestVersionNumberApp($package_name)
    {
        if (isset($package_name)) {
            $current_version = AppVersion::select(['version_code', 'must_update'])->where('package_name', $package_name)->get()->first();
            if ($current_version) {
                return response()->json([
                    'status' => 'success',
                    'must_update' => $current_version->must_update,
                    'version' => $current_version->version_code,
                    'error_code' => 0,
                    'error_message' => '',
                ]);
            }
        }

        return response()->json([
            'status' => 'failure',
            'version' => null,
            'error_code' => 0,
            'error_message' => '',
        ]);
    }

    public function track_user_download(Request $request)
    {
        if (isset($request->device_id) && isset($request->source)) {
            $track = TrackDownload::where('device_id', $request['device_id'])->first();
            if (!is_null($track)) {
                $track->source = $request['source'];
                $track->save();

                return $this->makeResponse('success');
            }

            TrackDownload::create(['device_id' => $request->device_id, 'source' => $request->source]);

            return $this->makeResponse('success');

        } else if (isset($request['device_id'])) {
            TrackDownload::create(['device_id' => $request->device_id]);

            return $this->makeResponse('success');
        }

        return $this->makeResponse('failure');
    }

    public function freeMedia($user_id)
    {
        $asked_voice = Question::whereType('audio')
            ->whereUserId($user_id)
            ->whereType('audio')
            ->whereIsPremium('0')
            ->where('created_at', '>', '2017-09-07 00:00:00')->count();

        $asked_with_attachment = Question::whereUserId($user_id)
            ->whereType('text')
            ->whereIsPremium('0')
            ->where('media_id', '>', 0)
            ->where('created_at', '>', '2017-09-20 00:00:00')
            ->count();

        if (ScratchApplied::whereUserId($user_id)->exists()) {
            return response()->json([
                'status' => 'success',
                'total_voice_free' => 2,
                'total_attachemnt_free' => 2,
                'used_voice' => 0,
                'used_attachment' => 0,
                'error_code' => 0,
                'error_message' => '',
            ]);
        }

        return response()->json([
            'status' => 'success',
            'total_voice_free' => 2,
            'total_attachemnt_free' => 2,
            'used_voice' => $asked_voice,
            'used_attachment' => $asked_with_attachment,
            'error_code' => 0,
            'error_message' => '',
        ]);
    }

    private function makeResponse($status)
    {
        return response()->json([
            'status' => $status,
            'error_code' => 0,
            'error_message' => '',
        ]);
    }


    public function sendPushToSomeUsers()
    {
        ini_set('max_execution_time', 0);
        $data = [
            "subject" => "সুখবর!",
            "message" => "message",
            "noti_type" => "custom",
            "noti_task" => "activity",
            "class_name" => "com.maya.mayaapaapp.Activities.Generic.SplashScreenActivity",
            "url" => "",
            "header_Text" => "",
            "details_text" => "",
            "btn_text" => "মায়া আপার সাথেই থাকুন",
            "log_in_needed" => 'no',
            "image_url" => "https://lh3.googleusercontent.com/-kU3nbkimpjI/W1m6ID_X-vI/AAAAAAAACxI/MZPkyhzCz8o56G6v56o7V9kA86PglV55QCL0BGAYYCw/h500/2018-07-26.png",
            "question_id" => "33",
            "article_id" => ""
        ];

        $userIds = DB::select("SELECT id FROM users WHERE id = 14228 or id = 16194");

        $ids = implode(',', collect($userIds)->pluck('id')->toArray());

        $gcmUser = DB::select(DB::raw("select gcm_id from gcm_users where user_id in($ids)"));


        $tokens = [];
        $success = 0;
        $failure = 0;
        for ($i = 0; $i < count($gcmUser); $i++) {
            array_push($tokens, $gcmUser[$i]->gcm_id);
        }


                try {
                    $post = [
                        'registration_ids' => $tokens,
                        'data' => $data
                    ];

                    echo count($tokens) . "\n";
//                    $result = PushNotificationToUserApp::sendBULKGCMNotification($post);
                    $result = PushNotificationToUserApp::sendGCMNotification($post);

//                    dd($result);

                    $result = json_decode($result, true);

                    dd($result);

                    $s = $result['success'];
                    $f = $result['failure'];
                    $success = $success + $s;
                    $failure = $failure + $f;
                } catch (\Exception $exception) {
                    echo $exception;


        }
        echo "success: " . $success;
        echo "failure: " . $failure;
    }

    public function getUserInfo()
    {
        ini_set('max_execution_time', 0);
        $results = DB::select(DB::raw("select users.id,users.`email`,users.`phone` from users where id in(
4456	,
4819	,
6689	,
9455	,
9880	,
10183	,
11314	,
11654	,
11661	,
14116	,
14553	,
14857	,
15351	,
15437	,
16071	,
16136	,
16844	,
17937	,
18518	,
19044	,
19114	,
19184	,
19815	,
19818	,
19827	,
21052	,
21620	,
21734	,
23021	,
23635	,
23733	,
24144	,
25104	,
27055	,
27639	,
27730	,
28748	,
29631	,
33247	,
33864	,
35624	,
36253	,
36887	,
37758	,
37852	,
39382	,
39640	,
39727	,
40485	,
41537	,
44894	,
44987	,
45468	,
48086	,
48089	,
49084	,
51385	,
51769	,
53308	,
54283	,
54545	,
54597	,
55304	,
56696	,
57497	,
57586	,
57594	,
58027	,
58156	,
58261	,
59066	,
61449	,
62011	,
64903	,
65337	,
66352	,
72232	,
72978	,
79200	,
84237	,
87761	,
87843	,
94537	,
96289	,
99326	,
99795	,
100554	,
101105	,
101145	,
103435	,
103624	,
104491	,
105042	,
105163	,
105504	,
105879	,
106128	,
108059	,
108166	,
108385	,
108461	,
108609	,
108739	,
109260	,
109391	,
110914	,
110963	,
111109	,
112636	,
112690	,
112803	,
113186	,
113779	,
117927	,
121906	,
122371	,
125046	,
125434	,
126425	,
126828	,
126902	,
129170	,
129973	,
131272	,
132842	,
134011	,
134078	,
134136	,
134888	,
135224	,
137329	,
137943	,
137987	,
138092	,
139360	,
139880	,
140500	,
141278	,
141329	,
141351	,
141760	,
144977	,
144993	,
146776	,
147047	,
147482	,
147599	,
148894	,
149188	,
149872	,
153981	,
156201	,
157752	,
160164	,
160593	,
163607	,
164320	,
164443	,
165092	,
165160	,
165249	,
165417	,
165475	,
165765	,
165809	,
166024	,
166185	,
166190	,
166218	,
166407	,
166740	,
166772	,
167305	,
168289	,
169479	,
171037	,
171264	,
171652	,
172832	,
173665	,
173954	,
173967	,
176345	,
176691	,
178233	,
179846	,
180494	,
182251	,
182906	,
184044	,
184406	,
184679	,
185319	,
186310	,
186421	,
186938	,
187771	,
188419	,
189058	,
189163	,
189555	,
189589	,
189669	,
190272	,
190483	,
191068	,
191398	,
192031	,
192216	,
192524	,
192571	,
192680	,
195477	,
195848	,
196568	,
196908	,
197004	,
197360	,
197645	,
197815	,
197835	,
198168	,
198303	,
198337	,
198442	,
198737	,
198840	,
199075	,
199166	,
199367	,
199399	,
199487	,
199805	,
199830	,
200115	,
200180	,
200209	,
200940	,
201109	,
201193	,
201504	,
202372	,
202528	,
202570	,
202622	,
202746	,
203153	,
203175	,
203296	,
203357	,
203502	,
203642	,
203838	,
203918	,
203943	,
203959	,
204009	,
204093	,
204274	,
204482	,
204555	,
204754	,
204802	,
204974	,
206077	,
206103	,
206448	,
206851	,
207174	,
207287	,
207627	,
208012	,
208827	,
209025	,
209488	,
211436	,
212868	,
214746	,
216019	,
217801	,
217954	,
218152	,
221694	,
221838	,
222214	,
222823	,
223512	,
223886	,
224220	,
224298	,
225375	,
225920	,
226058	,
226587	,
226603	,
226782	,
227558	,
227779	,
227945	,
227963	,
228282	,
228847	,
228963	,
229774	,
229885	,
230818	,
230913	,
231883	,
232006	,
232321	,
233296	,
233508	,
233964	,
234264	,
234552	,
234644	,
235195	,
235822	,
236200	,
236600	,
236926	,
236945	,
237439	,
237484	,
237647	,
237695	,
237791	,
238716	,
238985	,
239302	,
240851	,
241113	,
241794	,
241859	,
241875	,
241922	,
242013	,
242106	,
242423	,
242489	,
242523	,
242636	,
242638	,
243195	,
244211	,
244896	,
244958	,
245065	,
245302	,
245831	,
245856	,
245857	,
246062	,
246163	,
246567	,
246778	,
247148	,
247653	,
247962	,
248017	,
248036	,
248390	,
248763	,
248782	,
248822	,
248849	,
248946	,
249258	,
249337	,
249356	,
249414	,
249421	,
249542	,
249587	,
249810	,
249835	,
250047	,
250153	,
250186	,
250263	,
250308	,
250319	,
250383	,
250410	,
250486	,
250580	,
250718	,
250880	,
251050	,
251088	,
251097	,
251180	,
251499	,
251925	,
252408	,
252448	,
252544	,
252654	,
252880	,
253125	,
253388	,
253875	,
253961	,
254268	,
255284	,
255305	,
255491	,
255536	,
255577	,
255881	,
256326	,
256357	,
256518	,
256921	,
257034	,
257122	,
257131	,
257233	,
257247	,
257406	,
257415	,
257508	,
257597	,
257664	,
257755	,
258145	,
258205	,
258228	,
258621	,
258659	,
259039	,
259264	,
259300	,
259416	,
259464	,
259571	,
259592	,
259694	,
259714	,
259805	,
259943	,
260106	,
260127	,
260160	,
260296	,
260397	,
260530	,
261168	,
261218	,
261356	,
261425	,
261511	,
261570	,
261727	,
261737	,
261867	,
261941	,
262043	,
262336	,
262543	,
262544	,
263018	,
263156	,
263249	,
263262	,
263272	,
263788	,
264077	,
264185	,
264207	,
264261	,
264409	,
264663	,
264865	,
264885	,
264994	,
265010	,
265067	,
265252	,
265253	,
265429	,
265549	,
265911	,
266378	,
266423	,
266443	,
266452	,
266505	,
266577	,
266640	,
266704	,
266730	,
266752	,
267019	,
267098	,
267205	,
267249	,
267275	,
267277	,
267279	,
267365	,
267399	,
267410	,
267560	,
267780	,
267823	,
267938	,
267968	,
268249	,
268369	,
268406	,
268599	,
268923	,
269134	,
269168	,
269455	,
269542	,
269617	,
269719	,
269815	,
269997	,
270058	,
270267	,
270447	,
270647	,
271093	,
271095	,
271368	,
271751	,
271789	,
271909	,
271926	,
271958	,
271976	,
271997	,
272038	,
272043	,
272168	,
272233	,
272254	,
272362	,
272487	,
272520	,
272892	,
273066	,
273067	,
273155	,
273249	,
273374	,
273693	,
273949	,
274009	,
274061	,
274095	,
274369	,
274597	,
274838	,
274989	,
274994	,
275003	,
275204	,
275243	,
275274	,
275376	,
275399	,
275457	,
275462	,
275544	,
275691	,
275801	,
275812	,
275885	,
276310	,
276334	,
276351	,
276428	,
276530	,
276593	,
276797	,
276881	,
276946	,
277107	,
277146	,
277291	,
277361	,
277482	,
277662	,
277728	,
277914	,
277962	,
277989	,
278066	,
278116	,
278184	,
278194	,
278385	,
278434	,
278580	,
278584	,
278653	,
278661	,
278663	,
279034	,
279123	,
279293	,
279466	,
279500	,
279522	,
279581	,
279945	,
279967	,
279985	,
280027	,
280102	,
280407	,
280602	,
280676	,
280692	,
280711	,
280721	,
280746	,
280843	,
280944	,
280996	,
281050	,
281233	,
281237	,
281251	,
281344	,
281548	,
281900	,
281942	,
282167	,
282316	,
282352	,
282440	,
282442	,
282478	,
282488	,
282508	,
282622	,
282708	,
282904	,
283125	,
283193	,
283309	,
283337	,
283342	,
283844	,
283914	,
284006	,
284033	,
284132	,
284257	,
284417	,
284561	,
284664	,
284781	,
284827	,
285128	,
285160	,
285328	,
285430	,
285454	,
285475	,
285550	,
285657	,
285675	,
285809	,
285839	,
285880	,
285918	,
285971	,
286078	,
286286	,
286288	,
286376	,
286395	,
286424	,
286479	,
286526	,
286640	,
286721	,
286812	,
286841	,
286966	,
287095	,
287118	,
287403	,
287416	,
287424	,
287502	,
287505	,
287518	,
287525	,
287806	,
287858	,
287912	,
287989	,
287990	,
288045	,
288050	,
288071	,
288143	,
288267	,
288322	,
288374	,
288521	,
288635	,
288666	,
288704	,
288812	,
289000	,
289046	,
289085	,
289168	,
289179	,
289208	,
289287	,
289370	,
289499	,
289583	,
289759	,
289824	,
289926	,
289957	,
290058	,
290062	,
290140	,
290193	,
290280	,
290293	,
290295	,
290404	,
290476	,
290487	,
290503	,
290601	,
290754	,
290846	,
290905	,
290966	,
291179	,
291210	,
291260	,
291343	,
291361	,
291674	,
291748	,
291798	,
291802	,
291928	,
291930	,
291937	,
292247	,
292287	,
292431	,
292503	,
292573	,
292624	,
292654	,
292688	,
292732	,
292746	,
292757	,
292775	,
292962	,
292991	,
293086	,
293235	,
293363	,
293455	,
293548	,
293591	,
293697	,
293936	,
293952	,
293990	,
294147	,
294341	,
294411	,
294445	,
294447	,
294464	,
294470	,
294658	,
294678	,
294749	,
294803	,
294832	,
294855	,
295238	,
295313	,
295386	,
295449	,
295508	,
295525	,
295539	,
295579	,
295600	,
295782	,
295827	,
295917	,
295925	,
296042	,
296129	,
296552	,
296642	,
296711	,
296768	,
296891	,
296963	,
296966	,
297014	,
297103	,
297115	,
297117	,
297130	,
297141	,
297153	,
297269	,
297278	,
297331	,
297399	,
297434	,
297579	,
297588	,
297628	,
297647	,
297676	,
297722	,
297829	,
297846	,
297900	,
297980	,
298018	,
298097	,
298119	,
298124	,
298134	,
298147	,
298164	,
298268	,
298375	,
298393	,
298498	,
298520	,
298527	,
298552	,
298571	,
298592	,
298661	,
298687	,
298692	,
298818	,
298953	,
298973	,
299070	,
299138	,
299181	,
299195	,
299244	,
299313	,
299381	,
299432	,
299445	,
299449	,
299523	,
299611	,
299614	,
299703	,
299849	,
299861	,
300003	,
300014	,
300284	,
300298	,
300304	,
300334	,
300398	,
300441	,
300502	,
300576	,
300602	,
300619	,
300628	,
300631	,
300672	,
300699	,
300722	,
300747	,
300750	,
300793	,
300798	,
300802	,
300803	,
300816	,
300820	,
300870	,
300952	,
301011	,
301024	,
301037	,
301039	,
301081	,
301206	,
301216	,
301241	,
301338	,
301585	,
301799	,
301821	,
301958	,
302050	,
302217	,
302220	,
302275	,
302296	,
302347	,
302384	,
302645	,
302766	,
302822	,
302834	,
302943	,
303077	,
303088	,
303155	,
303212	,
303219	,
303254	,
303372	,
303451	,
303470	,
303533	,
303548	,
303700	,
303766	,
303770	,
303773	,
303780	,
303864	,
303890	,
303991	,
304019	,
304124	,
304189	,
304390	,
304393	,
304430	,
304628	,
304648	,
304657	,
304675	,
304797	,
304800	,
304807	,
304827	,
304865	,
304900	,
304918	,
304926	,
304958	,
304964	,
304986	,
304993	,
305151	,
305260	,
305412	,
305510	,
305513	,
305524	,
305564	,
305569	,
305634	,
305646	,
305711	,
305757	,
305769	,
306042	,
306078	,
306082	,
306135	,
306219	,
306357	,
306408	,
306416	,
306451	,
306459	,
306517	,
306712	,
306778	,
306814	,
306835	,
306841	,
307003	,
307006	,
307214	,
307228	,
307233	,
307298	,
307450	,
307482	,
307745	,
307853	,
307934	,
308036	,
308039	,
308226	,
308253	,
308344	,
308451	,
308455	,
308513	,
308562	,
308666	,
308688	,
308855	,
308887	,
309123	,
309128	,
309153	,
309317	,
309462	,
309582	,
309607	,
309622	,
309669	,
309735	,
309744	,
309823	,
309951	,
309953	,
309980	,
310010	,
310099	,
310456	,
310462	,
310605	,
310646	,
310665	,
310767	,
310825	,
310875	,
310966	,
310986	,
311039	,
311133	,
311159	,
311172	,
311195	,
311205	,
311353	,
311503	,
311506	,
311630	,
311710	,
311863	,
311890	,
311983	,
312229	,
312241	,
312266	,
312316	,
312325	,
312406	,
312418	,
312434	,
312471	,
312480	,
312781	,
312788	,
313126	,
313302	,
313433	,
313450	,
313522	,
313559	,
313612	,
313626	,
313636	,
313645	,
313648	,
313699	,
313770	,
313794	,
313813	,
313817	,
313822	,
313883	,
314058	,
314079	,
314117	,
314128	,
314309	,
314348	,
314430	,
314467	,
314526	,
314570	,
314591	,
314604	,
314710	,
314759	,
314816	,
314836	,
315159	,
315180	,
315196	,
315204	,
315217	,
315222	,
315291	,
315384	,
315391	,
315457	,
315716	,
315768	,
315774	,
315818	,
315830	,
315838	,
315861	,
316008	,
316066	,
316073	,
316077	,
316202	,
316205	,
316552	,
316604	,
316783	,
316839	,
316841	,
316903	,
316966	,
316989	,
317323	,
317443	,
317498	,
317509	,
317559	,
317899	,
318052	,
318112	,
318126	,
318645	,
318678	,
318707	,
318798	,
318814	,
318930	,
318935	,
318941	,
318943	,
318989	,
319034	,
319039	,
319074	,
319084	,
319098	,
319103	,
319124	,
319248	,
319252	,
319258	,
319419	,
319472	,
319490	,
319503	,
319512	,
319514	,
319551	,
319565	,
319585	,
319592	,
319612	,
319651	,
319798	,
319828	,
319911	,
320024	,
320031	,
320055	,
320172	,
320217	,
320386	,
320425	,
320449	,
320467	,
323182	,
357286	,
366731	,
379646	,
381026	,
399070	,
399387	,
399397	,
399427	,
399522	,
399664	,
399787	,
399808	,
399836	,
399927	,
400225	,
400412	,
400455	,
400461	,
400473	,
400474	,
400502	,
400569	,
400623	,
400654	,
400769	,
400875	,
401102	,
401107	,
401817	,
436344	,
436359	,
436386	,
436440	,
436486	,
436609	,
436762	,
436804	,
436873	,
436890	,
436915	,
436940	,
437046	,
437255	,
437258	,
437267	,
437308	,
437319	,
437328	,
437359	,
437396	,
437400	,
437486	,
437507	,
437601	,
437672	,
437705	,
437711	,
437725	,
437874	,
437891	,
437926	,
437997	,
438043	,
438108	,
438118	,
438142	,
438147	,
438157	,
438272	,
438273	,
438286	,
438304	,
438602	,
438718	,
438725	,
438726	,
438759	,
438787	,
438835	,
438852	,
438999	,
439057	,
439113	,
439124	,
439152	,
439193	,
439502	,
439562	,
439565	,
439574	,
439613	,
439654	,
439664	,
439680	,
439722	,
439733	,
439737	,
439822	,
439863	,
439874	,
439894	,
439897	,
439922	,
439926	,
439939	,
439967	,
439995	,
439996	,
440028	,
440038	,
440063	,
440147	,
440154	,
440162	,
440190	,
440193	,
440199	,
440226	,
440236	,
440244	,
440247	,
440263	,
440303	,
440315	,
440337	,
440354	,
440359	,
440371	,
440382	,
440400	,
440413	,
440417	,
440460	,
440523	,
440527	,
440566	,
440617	,
440633	,
440649	,
440698	,
440756	,
440757	,
440764	,
440826	,
440843	,
440865	,
440870	,
440904	,
440917	,
440922	,
440927	,
440937	,
440980	,
440994	,
441004	,
441013	,
441014	,
441027	,
441031	,
441081	,
441098	,
441113	,
441116	,
441130	,
441133	,
441148	,
441159	,
441197	,
441205	,
441249	,
441256	,
441264	,
441274	,
441298	,
441300	,
441303	,
441317	,
441319	,
441322	,
441373	,
441407	,
441469	,
441477	,
441478	,
441537	,
441546	,
441614	,
441635	,
441637	,
441698	,
441725	,
442825	,
443354	,
443358	,
443381	,
443492	,
443556	,
443708	,
443812	,
443813	,
443822	,
443841	,
443848	,
443852	,
443865	,
443883	,
444153	,
444782	,
445227	,
445638	,
445642	,
445773	,
445824	,
445841	,
445855	,
445880	,
445979	,
446556	,
447195	,
447440	,
447442	,
447762	,
447909	,
448765	,
449320	,
449354	,
449821	,
451197	,
451279	,
451323	,
451445	,
452284	,
452306	,
452644	,
454165	,
454203	,
454518	,
454648	,
455167	,
455202	,
456703	,
456823	,
457244	,
457809	,
457881	,
457891	,
457894	,
457906	,
458898	,
459165	,
459300	,
459437	,
459492	,
460577	,
461071	,
461081	,
461083	,
461104	,
461138	,
461141	,
461154	,
461210	,
461211	,
461222	,
461235	,
461245	,
461257	,
461299	,
461311	,
461318	,
461326	,
461364	,
461390	,
461426	,
461478	,
461484	,
461539	,
461564	,
461646	,
461657	,
461676	,
461680	,
461820	,
461824	,
461906	,
462107	,
462632	,
462786	,
462832	,
463179	,
463435	,
463566	,
464025	,
464154	,
464344	,
464683	,
465263	,
465273	,
465357	,
465476	,
465643	,
465655	,
465762	,
465898	,
465964	,
466242	,
466433	,
466434	,
466477	,
466579	,
466632	,
467048	,
467129	,
467159	,
467423	,
467517	,
467522	,
467807	,
467988	,
468421	,
468487	,
468708	,
468713	,
468763	,
468955	,
469094	,
469124	,
469236	,
469317	,
469332	,
469420	,
469688	,
469709	,
469791	,
469845	,
469940	,
469972	,
470180	,
470239	,
470342	,
470425	,
470473	,
470569	,
470571	,
470802	,
471321	,
471337	,
471388	,
471454	,
471480	,
471496	,
471633	,
472101	,
472176	,
472523	,
472544	,
472560	,
472786	,
472795	,
472986	,
473017	,
473043	,
473151	,
473558	,
473634	,
473642	,
473767	,
473984	,
474201	,
474215	,
474292	,
474325	,
474850	,
474936	,
474942	,
475159	,
475164	,
475194	,
475203	,
475393	,
475466	,
475537	,
475727	,
475865	,
475873	,
475894	,
475930	,
476235	,
476369	,
476373	,
476410	,
476490	,
476517	,
476555	,
476648	,
476680	,
476695	,
476705	,
476805	,
476910	,
476931	,
477082	,
477116	,
477971	,
477990	,
478102	,
478175	,
478217	,
478243	,
478297	,
478455	,
478486	,
478579	,
478585	,
478681	,
478732	,
478789	,
478934	,
479067	,
479094	,
479097	,
479103	,
479133	,
479190	,
479201	,
479300	,
479584	,
479773	,
479887	,
479899	,
480150	,
480375	,
480430	,
480518	,
480559	,
480643	,
480676	,
481208	,
481241	,
481429	,
481687	,
481915	,
482107	,
482581	,
482944	,
482988	,
483049	,
483064	,
483118	,
483155	,
483256	,
484090	,
484635	,
485070	,
485105	,
485192	,
485204	,
485221	,
485427	,
485428	,
485460	,
485477	,
485479	,
485534	,
485535	,
485537	,
485561	,
485563	,
485585	,
485615	,
485623	,
485628	,
485633	,
485638	,
485645	,
485650	,
485669	,
485738	,
485757	,
485768	,
485769	,
485895	,
485910	,
485925	,
485928	,
485947	,
485969	,
486014	,
486025	,
486039	,
486042	,
486081	,
486089	,
486099	,
486104	,
486138	,
486155	,
486157	,
486177	,
486195	,
486221	,
486259	,
486298	,
486308	,
486313	,
486335	,
486360	,
486378	,
486381	,
486387	,
486389	,
486421	,
486429	,
486439	,
486460	,
486468	,
486482	,
486497	,
486501	,
486504	,
486515	,
486520	,
486530	,
486531	,
486543	,
486556	,
486575	,
486617	,
486634	,
486656	,
486659	,
486678	,
486680	,
486688	,
486696	,
486714	,
486755	,
486759	,
486774	,
486787	,
486789	,
486809	,
486836	,
486867	,
486884	,
486889	,
486896	,
486914	,
486925	,
486945	,
486972	,
487063	,
487094	,
487112	,
487116	,
487152	,
487326	,
487380	,
487655	,
487673	,
488147	,
488407	,
488654	,
489270	,
489274	,
489277	,
489757	,
489769	,
489774	,
489823	,
489853	,
489871	,
489886	,
489899	,
489914	,
489955	,
490074	,
490107	,
490124	,
490144	,
490157	,
490159	,
490174	,
490178	,
490182	,
490183	,
490186	,
490190	,
490199	,
490219	,
490220	,
490221	,
490353	,
490390	,
490391	,
490428	,
490429	,
490441	,
490451	,
490485	,
490499	,
490503	,
490520	,
490524	,
490535	,
490538	,
490545	,
490559	,
490580	,
490625	,
490666	,
490686	,
490706	,
490723	,
490758	,
490816	,
490831	,
490832	,
490845	,
490848	,
490870	,
490884	,
490898	,
490904	,
490968	,
491028	,
491591	,
491704	,
491901	,
491955	,
491980	,
492003	,
492063	,
492085	,
492124	,
492145	,
492158	,
492232	,
492239	,
492288	,
492517	,
492536	,
492595	,
492609	,
492628	,
492630	,
492660	,
492883	,
492889	,
492929	,
492948	,
493032	,
493060	,
493216	,
493289	,
493314	,
493340	,
493378	,
493386	,
493539	,
493542	,
493612	,
493866	,
493875	,
493963	,
494017	,
494050	,
494118	,
494209	,
494215	,
494225	,
494383	,
494391	,
494393	,
494402	,
494421	,
494435	,
494518	,
494533	,
494563	,
494584	,
494602	,
494613	,
494616	,
494637	,
494654	,
494655	,
494656	,
494761	,
494933	,
494967	,
495497	,
495775	,
495776	,
495781	,
495793	,
495804	,
495806	,
495819	,
495821	,
495826	,
495828	,
495831	,
495834	,
495839	,
495841	,
495845	,
495847	,
495853	,
495854	,
495859	,
496071	,
496817	,
496934	,
496941	,
496945	,
496966	,
496974	,
496985	,
496990	,
497010	,
497201	,
497216	,
497222	,
497223	,
497240	,
497241	,
497286	,
497346	,
497372	,
497388	,
497490	,
497529	,
497604	,
497652	,
497727	,
497747	,
497806	,
498008	,
498035	,
498056	,
498074	,
498088	,
498123	,
498145	,
498146	,
498195	,
498252	,
498290	,
498323	,
498349	,
498389	,
498442	,
498465	,
498508	,
498520	,
498558	,
498638	,
498670	,
498807	,
498905	,
499819	,
500289	,
500298	,
500480	,
500501	,
500535	,
500629	,
500666	,
500810	,
501014	,
501115	,
501170	,
501239	,
501241	,
501249	,
501254	,
501255	,
501258	,
501260	,
501262	,
501273	,
501284	,
501303	,
501308	,
501309	,
501310	,
501318	,
501319	,
501321	,
501331	,
501334	,
501335	,
501336	,
501339	,
501343	,
501346	,
501350	,
501351	,
501354	,
501362	,
501364	,
501365	,
501367	,
501370	,
501371	,
501372	,
501374	,
501376	,
501377	,
501378	,
501382	,
501391	,
501398	,
501460	,
501899	,
502033	,
502958	,
502977	,
502992	,
502996	,
503054	,
503109	,
503116	,
503127	,
503128	,
503142	,
503145	,
503192	,
503204	,
503230	,
503232	,
503242	,
503258	,
503310	,
503414	,
503421	,
503454	,
503477	,
503512	,
503519	,
503558	,
503573	,
503610	,
503612	,
503617	,
503626	,
503691	,
503733	,
503747	,
503753	,
503762	,
503768	,
503777	,
503822	,
503849	,
503860	,
503889	,
503898	,
503911	,
503926	,
503936	,
503962	,
503974	,
503982	,
503987	,
503993	,
504008	,
504009	,
504013	,
504020	,
504037	,
504059	,
504107	,
504221	,
504228	,
504246	,
504294	,
504316	,
504349	,
504356	,
504395	,
504399	,
504404	,
504427	,
504466	,
504483	,
504641	,
504988	,
504989	,
504992	,
504993	,
505006	,
505088	,
505123	,
505139	,
505144	,
505203	,
505242	,
505258	,
505268	,
505271	,
505276	,
505299	,
505302	,
505321	,
505328	,
505329	,
505378	,
505389	,
505404	,
505435	,
505448	,
505451	,
505485	,
505493	,
505494	,
505499	,
505503	,
505506	,
505507	,
505510	,
505512	,
505514	,
505517	,
505521	,
505522	,
505523	,
505527	,
505536	,
505538	,
505549	,
505569	,
505570	,
505573	,
505592	,
505594	,
505634	,
505637	,
505639	,
505644	,
505646	,
505648	,
505649	,
505651	,
505660	,
505662	,
505664	,
505678	,
505684	,
505688	,
505691	,
505701	,
505703	,
505705	,
505706	,
505715	,
505720	,
505721	,
505723	,
505724	,
505726	,
505731	,
505739	,
505762	,
505917	,
506793	,
506798	,
506802	,
506804	,
506805	,
506816	,
506817	,
506827	,
506831	,
506833	,
506834	,
506836	,
506837	,
506838	,
506844	,
506847	,
506855	,
506860	,
506862	,
506867	,
506869	,
506875	,
506880	,
506884	,
506890	,
506894	,
506902	,
506916	,
506927	,
506930	,
506933	,
506944	,
506959	,
506963	,
506971	,
506972	,
506977	,
506979	,
506985	,
507017	,
507059	,
507072	,
507086	,
507097	,
507099	,
507104	,
507106	,
507109	,
507114	,
507115	,
507119	,
507120	,
507128	,
507131	,
507150	,
507156	,
507157	,
507167	,
507181	,
507250	,
507273	,
507275	,
507278	,
507285	,
507297	,
507322	,
507346	,
507352	,
507355	,
507356	,
507357	,
507365	,
507372	,
507386	,
507393	,
507397	,
507400	,
507407	,
507428	,
507448	,
507450	,
507453	,
507454	,
507463	,
507468	,
507469	,
507478	,
507487	,
507490	,
507496	,
507500	,
507504	,
507505	,
507513	,
507519	,
507520	,
507521	,
507527	,
507530	,
507533	,
507536	,
507542	,
507543	,
507545	,
507549	,
507550	,
507559	,
507565	,
507567	,
507569	,
507571	,
507572	,
507578	,
507580	,
507588	,
507601	,
507606	,
507609	,
507610	,
507616	,
507621	,
507622	,
507625	,
507627	,
507633	,
507635	,
507638	,
507646	,
507652	,
507656	,
507659	,
507660	,
507666	,
507667	,
507670	,
507671	,
507673	,
507674	,
507675	,
507678	,
507680	,
507685	,
507686	,
507690	,
507692	,
507695	,
507705	,
507706	,
507716	,
507753	,
507825	,
507845	,
507847	,
507848	,
507931	,
507972	,
508943	,
508949	,
508950	,
508954	,
508956	,
508958	,
508973	,
508977	,
508985	,
509000	,
509002	,
509010	,
509013	,
509018	,
509019	,
509020	,
509021	,
509022	,
509026	,
509141	,
509449	,
509452	,
509459	,
509464	,
509468	,
509471	,
509472	,
509476	,
509477	,
509479	,
509484	,
509487	,
509488	,
509489	,
509491	,
509493	,
509497	,
509499	,
509503	,
509507	,
509508	,
509509	,
509510	,
509511	,
509513	,
509516	,
509517	,
509519	,
509520	,
509523	,
509524	,
509528	,
509530	,
509531	,
509533	,
509534	,
509537	,
509540	,
509541	,
509542	,
509543	,
509546	,
509547	,
509549	,
509551	,
509555	,
509557	,
509558	,
509559	,
509560	,
509561	,
509564	,
509566	,
509567	,
509569	,
509570	,
509572	,
509573	,
509574	,
509577	,
509586	,
509588	,
509606	,
509610	,
509616	,
509617	,
509792	,
509829	,
509853	,
509896	,
509908	,
510060	,
510119	,
510148	,
510157	,
510356	,
510657	,
511142	,
511195	,
511197	,
511198	,
511203	,
511204	,
511205	,
511206	,
511209	,
511210	,
511211	,
511214	,
511218	,
511219	,
511222	,
511225	,
511247	,
511248	,
511251	,
511260	,
511263	,
511264	,
511265	,
511269	,
511271	,
511272	,
511275	,
511279	,
511281	,
511283	,
511287	,
511290	,
511291	,
511299	,
511303	,
511304	,
511305	,
511306	,
511307	,
511313	,
511316	,
511318	,
511319	,
511321	,
511322	,
511324	,
511326	,
511329	,
511330	,
511332	,
511333	,
511336	,
511337	,
511343	,
511345	,
511346	,
511349	,
511352	,
511354	,
511359	,
511363	,
511364	,
511366	,
511371	,
511372	,
511374	,
511377	,
511379	,
511380	,
511383	,
511384	,
511391	,
511393	,
511397	,
511398	,
511399	,
511400	,
511402	,
511404	,
511407	,
511408	,
511411	,
511412	,
511413	,
511414	,
511415	,
511416	,
511419	,
511421	,
511423	,
511425	,
511426	,
511431	,
511433	,
511434	,
511435	,
511439	,
511444	,
511602	,
511799	,
512322	,
512878	,
512879	,
512881	,
512882	,
512887	,
512888	,
512890	,
512891	,
512898	,
512902	,
512903	,
512905	,
512906	,
512908	,
512913	,
512914	,
512918	,
512924	,
512926	,
512927	,
512930	,
512935	,
512936	,
512944	,
512949	,
512950	,
512953	,
512954	,
512955	,
512961	,
512963	,
512965	,
512966	,
512967	,
512968	,
512970	,
512971	,
512973	,
512986	,
512988	,
512993	,
512994	,
513003	,
513005	,
513006	,
513007	,
513008	,
513009	,
513011	,
513012	,
513016	,
513017	,
513018	,
513019	,
513022	,
513034	,
513035	,
513036	,
513037	,
513040	,
513043	,
513044	,
513045	,
513048	,
513049	,
513050	,
513057	,
513058	,
513059	,
513060	,
513062	,
513063	,
513065	,
513066	,
513067	,
513068	,
513069	,
513071	,
513073	,
513074	,
513077	,
513078	,
513079	,
513080	,
513081	,
513085	,
513087	,
513090	,
513096	,
513099	,
513101	,
513102	,
513308	,
513574	,
513636	,
514115	,
514262	,
514522	,
514529	,
514531	,
514534	,
514535	,
514536	,
514537	,
514539	,
514541	,
514542	,
514543	,
514544	,
514545	,
514548	,
514552	,
514553	,
514555	,
514567	,
514568	,
514574	,
514575	,
514577	,
514578	,
514582	,
514589	,
514594	,
514595	,
514599	,
514600	,
514601	,
514610	,
514623	,
514627	,
514629	,
514631	,
514633	,
514635	,
514642	,
514644	,
514646	,
514647	,
514649	,
514652	,
514656	,
514671	,
514673	,
514674	,
514676	,
514677	,
514678	,
514679	,
514680	,
514682	,
514688	,
514691	,
514696	,
514699	,
514701	,
514704	,
514705	,
514711	,
514714	,
514718	,
514719	,
514721	,
514723	,
514732	,
514737	,
514748	,
514750	,
514754	,
514759	,
514762	,
514763	,
514771	,
514772	,
514778	,
514779	,
514780	,
514784	,
514785	,
514787	,
514790	,
514791	,
514799	,
514800	,
514803	,
514804	,
514805	,
514808	,
514809	,
514811	,
514820	,
514821	,
514824	,
514828	,
514830	,
514832	,
514833	,
514834	,
514835	,
514836	,
514837	,
514840	,
514843	,
514846	,
514847	,
514848	,
514850	,
514856	,
514859	,
514863	,
514864	,
514866	,
514868	,
515244	,
515554	,
515641	,
515755	,
516230	,
516233	,
516235	,
516238	,
516244	,
516245	,
516249	,
516250	,
516253	,
516258	,
516260	,
516263	,
516264	,
516266	,
516268	,
516269	,
516270	,
516271	,
516272	,
516273	,
516283	,
516285	,
516287	,
516290	,
516295	,
516297	,
516301	,
516303	,
516305	,
516306	,
516308	,
516310	,
516311	,
516316	,
516317	,
516326	,
516327	,
516328	,
516329	,
516333	,
516334	,
516337	,
516340	,
516341	,
516345	,
516347	,
516349	,
516351	,
516353	,
516355	,
516357	,
516359	,
516360	,
516362	,
516366	,
516368	,
516371	,
516373	,
516374	,
516375	,
516377	,
516378	,
516381	,
516382	,
516386	,
516387	,
516397	,
516408	,
516411	,
516416	,
516417	,
516420	,
516421	,
516424	,
516425	,
516427	,
516430	,
516434	,
516435	,
516436	,
516438	,
516439	,
516440	,
516447	,
516449	,
516450	,
516451	,
516452	,
516453	,
516454	,
516455	,
516458	,
516459	,
516465	,
516466	,
516467	,
516468	,
516470	,
516471	,
516478	,
516480	,
516493	,
516664	,
516958	,
517823	,
517826	,
517832	,
517835	,
517842	,
517845	,
517848	,
517852	,
517853	,
517854	,
517858	,
517861	,
517863	,
517864	,
517865	,
517866	,
517872	,
517874	,
517875	,
517880	,
517884	,
517892	,
517894	,
517900	,
517910	,
517913	,
517915	,
517919	,
517953	,
517962	,
517964	,
517966	,
517969	,
517977	,
517981	,
517982	,
517984	,
517992	,
517995	,
517997	,
517999	,
518006	,
518021	,
518022	,
518027	,
518035	,
518043	,
518050	,
518097	,
518258	,
518280	,
518371	,
518402	,
518404	,
518414	,
518424	,
518471	,
518485	,
518501	,
518560	,
518599	,
518621	,
518661	,
518687	,
518769	,
519044	,
519071	,
519142	,
519282	,
519427	,
519428	,
519450	,
519610	,
519625	,
519768	,
519856	,
519868	,
519914	,
519958	,
519981	,
519992	,
520025	,
520026	,
520052	,
520093	,
520095	,
520110	,
520172	,
520175	,
520179	,
520180	,
520182	,
520187	,
520188	,
520191	,
520193	,
520196	,
520199	,
520200	,
520201	,
520202	,
520203	,
520207	,
520208	,
520209	,
520212	,
520215	,
520220	,
520221	,
520224	,
520227	,
520229	,
520231	,
520232	,
520233	,
520734	,
520875	,
521097	,
521427	,
521733	,
521820	,
521933	,
522064	,
522201	,
522337	,
522387	,
522397	,
522401	,
522416	,
522455	,
522490	,
522496	,
522511	,
522612	,
522824	,
522837	,
522839	,
522844	,
522846	,
522847	,
522850	,
522852	,
522853	,
522858	,
522859	,
522871	,
522876	,
522877	,
522884	,
522885	,
522886	,
522890	,
522916	,
522950	,
522952	,
522985	,
522988	,
522997	,
522998	,
523000	,
523003	,
523027	,
523044	,
523046	,
523050	,
523052	,
523056	,
523057	,
523058	,
523059	,
523065	,
523066	,
523067	,
523071	,
523074	,
523075	,
523079	,
523084	,
523086	,
523093	,
523094	,
523100	,
523101	,
523104	,
523105	,
523108	,
523113	,
523123	,
523136	,
523141	,
523142	,
523152	,
523154	,
523155	,
523158	,
523160	,
523164	,
523168	,
523169	,
523170	,
523172	,
523174	,
523181	,
523183	,
523186	,
523194	,
523198	,
523200	,
523203	,
523204	,
523205	,
523207	,
523209	,
523210	,
523211	,
523215	,
523216	,
523217	,
523218	,
523219	,
523221	,
523224	,
523226	,
523227	,
523228	,
523229	,
523235	,
523237	,
523240	,
523242	,
523246	,
523248	,
523442	,
523975	,
524427	,
524965	,
524969	,
524971	,
524985	,
525009	,
525011	,
525173	,
525184	,
525216	,
525310	,
525510	,
525535	,
525544	,
525577	,
525585	,
525608	,
525643	,
525644	,
525651	,
525653	,
525654	,
525656	,
525659	,
525661	,
525662	,
525663	,
525664	,
525666	,
525667	,
525668	,
525669	,
525670	,
525671	,
525674	,
525677	,
525678	,
525679	,
525681	,
525682	,
525694	,
525701	,
525703	,
525713	,
525718	,
525724	,
525733	,
525735	,
525738	,
525743	,
525744	,
525746	,
525748	,
525823	,
525835	,
525844	,
525849	,
525850	,
525856	,
525860	,
525862	,
525869	,
525879	,
525884	,
525888	,
525892	,
525893	,
525895	,
525901	,
525906	,
525909	,
525912	,
525913	,
525936	,
525937	,
525938	,
525946	,
525948	,
525949	,
525950	,
525953	,
525959	,
525962	,
525974	,
525975	,
525981	,
525982	,
525987	,
525988	,
526001	,
526002	,
526008	,
526024	,
526025	,
526030	,
526033	,
526042	,
526044	,
526045	,
526049	,
526051	,
526052	,
526061	,
526071	,
526074	,
526076	,
526079	,
526081	,
526086	,
526087	,
526088	,
526089	,
526092	,
526096	,
526102	,
526105	,
526114	,
526117	,
526119	,
526121	,
526122	,
526133	,
526135	,
526137	,
526143	,
526144	,
526146	,
526148	,
526191	,
526211	,
526421	,
526743	,
526763	,
527188	,
527422	,
527433	,
527451	,
527458	,
527463	,
527465	,
527466	,
527654	,
527676	,
527679	,
527680	,
527682	,
527683	,
527688	,
527700	,
527705	,
527709	,
527711	,
527713	,
527720	,
527722	,
527793	,
528029	,
528060	,
528081	,
528164	,
528255	,
528315	,
528379	,
528587	,
528626	,
528633	,
528637	,
528638	,
528639	,
528640	,
528652	,
528656	,
528660	,
528672	,
528673	,
528674	,
528676	,
528682	,
528684	,
528685	,
528687	,
528688	,
528689	,
528690	,
528692	,
528693	,
528694	,
528699	,
528701	,
528702	,
528704	,
528706	,
528707	,
528709	,
528710	,
528712	,
528714	,
528767	,
528784	,
528868	,
529040	,
529061	,
529142	,
529143	,
529144	,
529146	,
529149	,
529150	,
529154	,
529156	,
529168	,
529173	,
529176	,
529177	,
529178	,
529222	,
529256	,
529445	,
529448	,
529529	,
529598	,
529775	,
529776	,
529779	,
529782	,
529784	,
529785	,
529786	,
529816	,
530713	,
530716	,
530719	,
530722	,
530723	,
530727	,
530728	,
530729	,
530732	,
530734	,
530739	,
530747	,
530750	,
530751	,
530752	,
530755	,
530758	,
530763	,
530765	,
530766	,
530767	,
530771	,
530772	,
530775	,
530776	,
530778	,
530780	,
530781	,
530782	,
530783	,
530787	,
530790	,
530798	,
530799	,
530803	,
530815	,
530819	,
530826	,
530830	,
530833	,
530836	,
530847	,
530848	,
530854	,
530858	,
530866	,
530867	,
530868	,
530872	,
530876	,
530882	,
530886	,
530887	,
530900	,
530901	,
530909	,
531054	,
531066	,
531129	,
531183	,
531185	,
531186	,
531189	,
531196	,
531198	,
531204	,
531205	,
531206	,
531211	,
531215	,
531217	,
531221	,
531225	,
531227	,
531229	,
531230	,
531232	,
531515	,
531932	,
532184	,
532480	,
532591	,
532607	,
533144	,
533295	,
533415	,
533529	,
533597	,
533600	,
533601	,
533603	,
533605	,
533608	,
533609	,
533611	,
533615	,
533618	,
533624	,
533625	,
533626	,
533631	,
533632	,
533644	,
533647	,
533655	,
533657	,
533658	,
533660	,
533662	,
533663	,
533664	,
533669	,
533670	,
533671	,
533673	,
533675	,
533678	,
533680	,
533682	,
533684	,
533689	,
533690	,
533699	,
533700	,
533701	,
533702	,
533703	,
533705	,
533708	,
533711	,
533717	,
533719	,
533722	,
533723	,
533724	,
533727	,
533731	,
533735	,
533736	,
533738	,
533743	,
533746	,
533748	,
533840	,
533997	,
534030	,
534140	,
534242	,
534284	,
534357	,
534371	,
534465	,
534484	,
534491	,
534500	,
534510	,
534517	,
534524	,
534536	,
534537	,
534539	,
534542	,
534551	,
534557	,
534568	,
534569	,
534580	,
534587	,
535016	,
535331	,
535363	,
535518	,
535627	,
535630	,
535636	,
535639	,
535643	,
535649	,
535650	,
535651	,
535656	,
535657	,
535658	,
535659	,
535663	,
535664	,
535665	,
535666	,
535673	,
535675	,
535677	,
535678	,
535680	,
535682	,
535683	,
535684	,
535685	,
535690	,
535691	,
535696	,
535699	,
535705	,
535706	,
535708	,
535709	,
535711	,
535712	,
535714	,
535715	,
535717	,
535729	,
535735	,
535738	,
535739	,
535742	,
535743	,
535748	,
535750	,
535755	,
535757	,
535758	,
535767	,
535768	,
535771	,
535773	,
535777	,
535780	,
535791	,
535793	,
535795	,
535798	,
535799	,
535803	,
535819	,
535821	,
535826	,
535827	,
535829	,
535831	,
535833	,
535836	,
535838	,
535839	,
535848	,
535850	,
535855	,
535856	,
535858	,
535860	,
535864	,
535865	,
535866	,
535867	,
535871	,
535930	,
536050	,
536131	,
536673	,
536819	,
536918	,
537157	,
537611	,
537858	,
538046	,
538050	,
538055	,
538083	,
538084	,
538098	,
538113	,
538116	,
538118	,
538119	,
538120	,
538122	,
538123	,
538124	,
538142	,
538164	,
538167	,
538185	,
538187	,
538189	,
538193	,
538195	,
538201	,
538203	,
538204	,
538206	,
538209	,
538217	,
538219	,
538225	,
538231	,
538232	,
538233	,
538235	,
538236	,
538240	,
538253	,
538267	,
538275	,
538292	,
538294	,
538299	,
538306	,
538308	,
538313	,
538317	,
538319	,
538321	,
538323	,
538537	,
538568	,
538825	,
538887	,
538890	,
538892	,
538897	,
538905	,
538928	,
539364	,
539528	,
539600	,
539613	,
539919	,
540339	,
540542	,
540609	,
540627	,
540628	,
540646	,
540650	,
540651	,
540656	,
540658	,
540662	,
540673	,
540679	,
540693	,
540694	,
540698	,
540708	,
540709	,
540719	,
540721	,
540725	,
540733	,
540745	,
540760	,
540764	,
540768	,
540771	,
540773	,
540774	,
540780	,
540793	,
540794	,
540799	,
540802	,
540803	,
540805	,
540816	,
540817	,
540818	,
540834	,
540841	,
540848	,
540855	,
540859	,
540873	,
540874	,
540885	,
540890	,
540891	,
540897	,
540907	,
540911	,
540919	,
540925	,
540926	,
540939	,
541002	,
541035	,
541115	,
541136	,
541226	,
541236	,
541242	,
541305	,
541330	,
541334	,
541371	,
541394	,
541414	,
541417	,
541457	,
541550	,
541560	,
541572	,
541596	,
541604	,
541627	,
541634	,
541659	,
541670	,
541693	,
541714	,
541724	,
541754	,
541819	,
541864	,
541937	,
542741	,
542957	,
543272	,
543748	,
543772	,
543786	,
544157	,
544162	,
544371	,
544560	,
544577	,
544681	,
544682	,
544683	,
544687	,
544690	,
544691	,
544695	,
544697	,
544700	,
544704	,
544706	,
544709	,
544713	,
544716	,
544720	,
544722	,
544725	,
544726	,
544727	,
544735	,
544759	,
544761	,
544765	,
544773	,
544781	,
544782	,
544783	,
544784	,
544789	,
544793	,
544794	,
544795	,
544796	,
544797	,
544802	,
544805	,
544926	,
544946	,
544985	,
545008	,
545062	,
545063	,
545073	,
545153	,
545432	,
545446	,
545541	,
545552	,
545644	,
545730	,
545734	,
545887	,
545905	,
546010	,
546012	,
546023	,
546024	,
546028	,
546053	,
546108	,
546149	,
546166	,
546169	,
546172	,
546176	,
546229	,
546394	,
546564	,
546567	,
546600	,
546630	,
546813	,
546815	,
546822	,
546825	,
546826	,
546827	,
546830	,
546832	,
546835	,
546836	,
546838	,
546839	,
546840	,
546841	,
546964	,
547056	,
547258	,
547529	,
547531	,
547533	,
547535	,
547537	,
547539	,
547573	,
547816	,
547991	,
548005	,
548030	,
548037	,
548041	,
548048	,
548055	,
548057	,
548059	,
548062	,
548067	,
548073	,
548074	,
548077	,
548087	,
548093	,
548096	,
548097	,
548099	,
548100	,
548103	,
548108	,
548116	,
548119	,
548128	,
548131	,
548132	,
548137	,
548160	,
548163	,
548165	,
548166	,
548169	,
548175	,
548178	,
548181	,
548187	,
548191	,
548205	,
548208	,
548215	,
548219	,
548220	,
548225	,
548227	,
548230	,
548482	,
548721	,
548800	,
548802	,
548805	,
548810	,
548811	,
548813	,
548814	,
549279	,
549315	,
549323	,
549344	,
549542	,
549552	,
549586	,
549828	,
549904	,
549983	,
550076	,
550079	,
550083	,
550085	,
550396	,
550415	,
550469	,
550543	,
550807	,
550810	,
550819	,
550825	,
550830	,
550846	,
550847	,
550848	,
550858	,
550861	,
550866	,
550870	,
550871	,
550872	,
550874	,
550876	,
550881	,
550884	,
550887	,
550888	,
550892	,
550893	,
550894	,
550896	,
550897	,
550899	,
550900	,
550902	,
550903	,
550906	,
550908	,
550910	,
550912	,
550914	,
550918	,
550923	,
550929	,
550931	,
550933	,
550934	,
550935	,
550936	,
550937	,
550941	,
550944	,
550949	,
550954	,
550955	,
550956	,
550958	,
550959	,
550968	,
550970	,
551037	,
551172	,
551199	,
551216	,
551911	,
551973	,
552091	,
552160	,
552205	,
552262	,
552478	,
552646	,
552647	,
552650	,
552651	,
552654	,
552656	,
552660	,
552667	,
552670	,
552673	,
552674	,
552678	,
552680	,
552682	,
552751	,
553234	,
553247	,
553837	,
553838	,
553839	,
553840	,
553846	,
553849	,
553850	,
553851	,
553853	,
553859	,
553865	,
553882	,
553895	,
553900	,
553927	,
553939	,
553940	,
553941	,
553951	,
553953	,
553957	,
553958	,
553959	,
553968	,
553975	,
553976	,
553980	,
553982	,
553990	,
553991	,
553992	,
553997	,
554008	,
554013	,
554015	,
554019	,
554043	,
554049	,
554050	,
554064	,
554069	,
554073	,
554108	,
554340	,
554383	,
554394	,
554398	,
554516	,
554524	,
554536	,
554540	,
554541	,
554543	,
554545	,
554548	,
554549	,
554561	,
554563	,
554564	,
554565	,
554877	,
554958	,
555471	,
555503	,
555671	,
555673	,
555674	,
555675	,
555677	,
555685	,
555690	,
555697	,
555699	,
555711	,
555717	,
555719	,
555724	,
555730	,
555738	,
555750	,
555759	,
555763	,
555765	,
555770	,
555772	,
555773	,
555774	,
555780	,
555782	,
555783	,
555785	,
555787	,
555788	,
555789	,
555793	,
555795	,
555796	,
555798	,
555801	,
555802	,
555805	,
555807	,
555810	,
555813	,
555819	,
555831	,
555834	,
555835	,
555837	,
555838	,
555841	,
555843	,
555850	,
555851	,
555854	,
555855	,
555857	,
555858	,
555864	,
555866	,
555867	,
555868	,
555871	,
555872	,
555874	,
555881	,
555885	,
555888	,
555891	,
555893	,
555894	,
555897	,
555899	,
555903	,
555906	,
555910	,
555913	,
555915	,
555920	,
555924	,
555926	,
555927	,
555928	,
555929	,
555930	,
555932	,
555933	,
555934	,
555938	,
555939	,
555943	,
555945	,
555948	,
555949	,
555953	,
555955	,
555956	,
555963	,
555964	,
555965	,
555969	,
555970	,
555972	,
555973	,
555974	,
556069	,
556095	,
556880	,
557044	,
557196	,
557284	,
557437	,
557501	,
557681	,
557828	,
558067	,
558322	,
558347	,
558398	,
558584	,
558590	,
558681	,
558869	,
559216	,
559296	,
559437	,
559444	,
559745	,
560255	,
560258	,
560259	,
560261	,
560264	,
560267	,
560280	,
560281	,
560285	,
560286	,
560293	,
560295	,
560305	,
560307	,
560309	,
560325	,
560329	,
560330	,
560344	,
560346	,
560347	,
560351	,
560354	,
560357	,
560362	,
560366	,
560368	,
560376	,
560379	,
560381	,
560386	,
560402	,
560404	,
560408	,
560411	,
560415	,
560423	,
560424	,
560428	,
560431	,
560438	,
560439	,
560440	,
560444	,
560445	,
560448	,
560457	,
560458	,
560459	,
560464	,
560467	,
560471	,
560488	,
560615	,
560629	,
560675	,
560807	,
560973	,
561050	,
561300	,
561528	,
561556	,
561653	,
561655	,
561786	,
561788	,
561790	,
561841	,
562087	,
562566	,
562569	,
562662	,
562716	,
562915	,
563029	,
563034	,
563038	,
563045	,
563047	,
563052	,
563053	,
563055	,
563057	,
563059	,
563060	,
563063	,
563065	,
563070	,
563071	,
563072	,
563076	,
563077	,
563083	,
563088	,
563089	,
563090	,
563091	,
563097	,
563103	,
563104	,
563107	,
563108	,
563109	,
563116	,
563117	,
563120	,
563123	,
563125	,
563126	,
563127	,
563134	,
563140	,
563146	,
563147	,
563155	,
563157	,
563163	,
563164	,
563172	,
563174	,
563175	,
563176	,
563179	,
563183	,
563185	,
563187	,
563188	,
563189	,
563195	,
563197	,
563210	,
563216	,
563218	,
563221	,
563222	,
563224	,
563226	,
563228	,
563229	,
563233	,
563236	,
563242	,
563243	,
563245	,
563248	,
563256	,
563258	,
563260	,
563261	,
563262	,
563311	,
563393	,
563509	,
563685	,
564107	,
564193	,
564214	,
564509	,
564736	,
564741	,
564747	,
564748	,
564749	,
564752	,
564759	,
564760	,
564761	,
564762	,
564770	,
564781	,
564818	,
564825	,
564826	,
564827	,
564829	,
564831	,
564846	,
564908	,
564932	,
564948	,
564950	,
564954	,
564956	,
564959	,
564961	,
564962	,
564968	,
564972	,
564975	,
564979	,
564983	,
564998	,
564999	,
565002	,
565013	,
565017	,
565032	,
565034	,
565036	,
565039	,
565047	,
565049	,
565051	,
565054	,
565059	,
565061	,
565065	,
565066	,
565071	,
565082	,
565087	,
565133	,
565370	,
565375	,
566109	,
566110	,
566115	,
566119	,
566122	,
566123	,
566129	,
566130	,
566132	,
566133	,
566138	,
566140	,
566141	,
566145	,
566146	,
566148	,
566153	,
566154	,
566156	,
566158	,
566159	,
566161	,
566172	,
566173	,
566176	,
566178	,
566179	,
566182	,
566186	,
566190	,
566202	,
566203	,
566204	,
566205	,
566211	,
566217	,
566222	,
566230	,
566231	,
566234	,
566238	,
566241	,
566248	,
566252	,
566260	,
566261	,
566262	,
566265	,
566267	,
566275	,
566276	,
566278	,
566279	,
566282	,
566286	,
566287	,
566290	,
566300	,
566314	,
566332	,
566377	,
566538	,
566707	,
567420	,
567473	,
567477	,
567481	,
567483	,
567490	,
567491	,
567494	,
567497	,
567499	,
567500	,
567514	,
567515	,
567518	,
567522	,
567524	,
567526	,
567530	,
567533	,
567535	,
567541	,
567543	,
567548	,
567551	,
567557	,
567564	,
567565	,
567566	,
567567	,
567568	,
567575	,
567586	,
567595	,
567597	,
567602	,
567603	,
567605	,
567611	,
567613	,
567614	,
567616	,
567617	,
567618	,
567619	,
567620	,
567622	,
567623	,
567624	,
567626	,
567629	,
567630	,
567634	,
567635	,
567648	,
567649	,
567650	,
567653	,
567654	,
567663	,
567669	,
567670	,
567671	,
567683	,
567948	,
569066	,
569378	,
569625	,
570087	,
570093	,
570110	,
570111	,
570113	,
570115	,
570122	,
570138	,
570166	,
570170	,
570171	,
570176	,
570177	,
570181	,
570185	,
570189	,
570195	,
570204	,
570211	,
570226	,
570232	,
570233	,
570235	,
570240	,
570241	,
570261	,
570265	,
570266	,
570270	,
570271	,
570272	,
570276	,
570283	,
570288	,
570289	,
570292	,
570297	,
570298	,
570299	,
570301	,
570310	,
570314	,
570317	,
570327	,
570339	,
570342	,
570350	,
570351	,
570352	,
570357	,
570361	,
570365	,
570366	,
570367	,
570368	,
570369	,
570371	,
570374	,
570376	,
570377	,
570379	,
570382	,
570385	,
570388	,
570390	,
570393	,
570397	,
570401	,
570402	,
570405	,
570408	,
570409	,
570415	,
570426	,
570428	,
570433	,
570446	,
570447	,
570448	,
570469	,
570472	,
570477	,
570478	,
570485	,
570488	,
570490	,
570496	,
570509	,
570519	,
570523	,
570525	,
570528	,
570531	,
570534	,
570535	,
570543	,
570550	,
570552	,
570562	,
570563	,
570566	,
570568	,
570569	,
570570	,
570571	,
570573	,
570584	,
570588	,
570590	,
570591	,
570592	,
570594	,
570598	,
570600	,
570603	,
570606	,
570612	,
570613	,
570615	,
570622	,
570633	,
570643	,
570665	,
570666	,
570670	,
570674	,
570676	,
570677	,
570678	,
570679	,
570681	,
570686	,
570691	,
570692	,
570695	,
570701	,
570709	,
570719	,
570725	,
570726	,
570727	,
570736	,
570740	,
570741	,
570744	,
570745	,
570746	,
570750	,
570752	,
570763	,
570768	,
570769	,
570772	,
570773	,
570776	,
570777	,
570785	,
570787	,
570814	,
570816	,
570821	,
570822	,
570824	,
570825	,
570826	,
570827	,
570828	,
570831	,
570836	,
570837	,
570849	,
570853	,
570856	,
570860	,
570861	,
570864	,
570869	,
570876	,
570887	,
570888	,
570892	,
570893	,
570902	,
570903	,
570906	,
570915	,
570928	,
570936	,
570941	,
570942	,
570943	,
570950	,
570951	,
570954	,
570956	,
570962	,
570963	,
570973	,
570974	,
570979	,
570980	,
570982	,
570984	,
570985	,
570986	,
570987	,
570988	,
570990	,
570992	,
570997	,
570998	,
571000	,
571005	,
571006	,
571007	,
571008	,
571012	,
571016	,
571021	,
571023	,
571026	,
571029	,
571030	,
571031	,
571034	,
571036	,
571043	,
571044	,
571046	,
571048	,
571054	,
571056	,
571058	,
571060	,
571064	,
571065	,
571073	,
571076	,
571078	,
571081	,
571082	,
571084	,
571085	,
571088	,
571090	,
571091	,
571109	,
571121	,
571125	,
571126	,
571129	,
571132	,
571134	,
571139	,
571142	,
571144	,
571145	,
571146	,
571147	,
571159	,
571166	,
571178	,
571183	,
571193	,
571194	,
571197	,
571200	,
571205	,
571208	,
571214	,
571215	,
571216	,
571218	,
571220	,
571221	,
571224	,
571235	,
571236	,
571237	,
571242	,
571252	,
571257	,
571258	,
571264	,
571270	,
571275	,
571285	,
571287	,
571293	,
571294	,
571296	,
571301	,
571341	,
571347	,
571348	,
571357	,
571364	,
571371	,
571373	,
571395	,
571413	,
571425	,
571432	,
571434	,
571437	,
571441	,
571446	,
571450	,
571458	,
571471	,
571476	,
571479	,
571481	,
571489	,
571494	,
571500	,
571504	,
571507	,
571508	,
571512	,
571515	,
571521	,
571533	,
571535	,
571538	,
571549	,
571550	,
571551	,
571557	,
571564	,
571572	,
571573	,
571579	,
571586	,
571587	,
571588	,
571591	,
571604	,
571606	,
571611	,
571613	,
571617	,
571619	,
571632	,
571640	,
571649	,
571654	,
571655	,
571659	,
571660	,
571672	,
571675	,
571681	,
571685	,
571686	,
571695	,
571697	,
571702	,
571709	,
571710	,
571718	,
571743	,
571757	,
571759	,
571761	,
571772	,
571785	,
571788	,
571796	,
571801	,
571803	,
571810	,
571811	,
571824	,
571828	,
571832	,
571836	,
571841	,
571845	,
571863	,
571869	,
571881	,
571885	,
571897	,
571899	,
571905	,
571906	,
571907	,
571933	,
571937	,
571989	,
571991	,
572006	,
572025	,
572044	,
572056	,
572057	,
572069	,
572074	,
572075	,
572088	,
572120	

) limit 4000,5000"));
        $data = [];
        $total=0;
        foreach ( $results as $result){
            $user_data = [
                "phone"=> User::find($result->id)->phone ,
                "email"=> User::find($result->id)->email,
                "id"=>User::find($result->id)->id,
//                "count"=>$result->count,
//                "pay"=>floor($result->count/2)*20,
//                $total = $total+floor($result->count/2)*20
            ];


            array_push($data,$user_data);
        }
        Excel::create('Pay', function ($excel) use ($data) {
            $excel->sheet('Pay', function ($sheet) use ($data) {
                $sheet->fromArray($data);
            });
        })->export('xlsx');
        return response()->json([
            'status' => $data,
            'total'=>$total
        ]);


    }

}
